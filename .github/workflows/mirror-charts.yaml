name: Mirror Helm Charts

on:
  # Depends on successful validation workflow completion
  workflow_run:
    workflows: ["Validate Configuration"]
    types:
      - completed
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      chart_name:
        description: 'Optional: Specific chart to mirror (e.g., vault). Leave blank to mirror all.'
        required: false
        default: ''
  # Runs on a schedule (e.g., every Monday at 4:00 AM UTC)
  schedule:
    - cron: '0 4 * * 1'

jobs:
  # Check if we should proceed based on validation success
  check-validation:
    name: Check Validation Status
    runs-on: ubuntu-latest
    # Only run this check if triggered by workflow_run
    if: github.event_name == 'workflow_run'
    outputs:
      should_proceed: ${{ steps.check.outputs.should_proceed }}
    steps:
      - name: Check validation workflow result
        id: check
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" == "success" ]; then
            echo "should_proceed=true" >> $GITHUB_OUTPUT
            echo "✅ Validation workflow completed successfully, proceeding with chart mirroring"
          else
            echo "should_proceed=false" >> $GITHUB_OUTPUT
            echo "❌ Validation workflow failed, skipping chart mirroring"
          fi

  prepare-matrix:
    name: Prepare Matrix
    # Skip validation check for manual runs and scheduled runs
    needs: check-validation
    if: always() && (github.event_name != 'workflow_run' || needs.check-validation.outputs.should_proceed == 'true')
    uses: ./.github/workflows/generate-matrix.yml
    with:
      config-type: 'charts'
      config-file: './configs/charts.yaml'
      target-filter: ${{ github.event.inputs.chart_name || '' }}

  mirror:
    name: Mirror ${{ matrix.chart.name }}:${{ matrix.chart.version }}
    needs: prepare-matrix
    # Only run the job if the matrix is not empty
    if: needs.prepare-matrix.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        chart: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}

    steps:
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'

      - name: Log in to GitHub Container Registry (for OCI)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Mirror Helm Chart
        run: |
          CHART_NAME="${{ matrix.chart.name }}"
          CHART_VERSION="${{ matrix.chart.version }}"
          REPO_NAME="${{ matrix.chart.repo_name }}"
          REPO_URL="${{ matrix.chart.repo_url }}"
          
          # Construct the nested destination URL for better organization
          DESTINATION_URL="oci://ghcr.io/scalevector-io/${REPO_NAME}"

          echo "--> Mirroring Helm chart ${CHART_NAME}:${CHART_VERSION} to ${DESTINATION_URL}"
          
          # Add the public Helm repo, pull the chart, and push to your OCI registry
          helm repo add ${REPO_NAME} ${REPO_URL}
          helm repo update
          helm pull ${REPO_NAME}/${CHART_NAME} --version ${CHART_VERSION}
          helm push ${CHART_NAME}-${CHART_VERSION}.tgz ${DESTINATION_URL}

          echo "--> Mirror successful for ${CHART_NAME}:${CHART_VERSION}"